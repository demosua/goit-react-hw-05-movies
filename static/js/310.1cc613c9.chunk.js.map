{"version":3,"file":"static/js/310.1cc613c9.chunk.js","mappings":"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","sources":["api/api.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1315643545b87f640bd81c2c08cb68dd';\n\nasync function getTrendingMovies() {\n    try {\n      const url = `trending/movie/day?api_key=${API_KEY}`;\n      const response = await axios.get(url);\n      if (response) {return response.data.results;}\n        return Promise.reject(new Error(`There are no results for trending movies`));\n    } catch (error) {\n      return error;\n    }\n}\n\nasync function getMoviesSearch(movie) {\n  try {\n    const url = `search/movie?api_key=${API_KEY}&language=en-US&query=${movie}&page=1&include_adult=false`;\n    const response = await axios.get(url);\n    if (response.data.results.length > 0) {return response.data.results;}\n      return Promise.reject(new Error(`There are no results for movie you are searching for`));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getMovieDetails(movie_id) {\n  try {\n    const url = `movie/${movie_id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    if (response) {return response.data;}\n      return Promise.reject(new Error(`There are no results for trending movies`));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getMovieCredits(movie_id) {\n  try {\n    const url = `movie/${movie_id}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    if(response) {return response.data;}\n      return Promise.reject(new Error(`Error occured while fetching casting actors`));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getMovieReviews(movie_id) {\n  try {\n    const url = `movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(url);\n    if (response) {return response.data.results;}\n      return Promise.reject(new Error(`Error occured while fetching reviews`));\n  } catch (error) {\n    return error;\n  }\n}\n\nconst api = {\n  getTrendingMovies,\n  getMoviesSearch,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default api;","import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  ${'' /* align-items: center;\n  width: 100vw;\n  height: 100vh; */}\n`;","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n        <ThreeDots color=\"#3f51b5\" height={80} width={80} />\n    </LoaderContainer>\n  )\n};\n  \nexport default Loader;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n`;\n\nexport const Mov = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nexport const Ul = styled.ul`\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n`;","import { Suspense } from 'react';\nimport { Link, Outlet } from \"react-router-dom\";\nimport propTypes from 'prop-types';\nimport { Wrapper, Ul, Li, Mov } from './MovieInfo.styled';\nimport Loader from '../../components/Loader';\n\nconst MovieDetails = ({ movie }) => {\n  const { title, overview, genres, vote_average, release_date, poster_path } = movie;\n  const movieYear = `(${release_date.split('-')[0]})`;\n  const movieImage = `https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${poster_path}`;\n  const movieGenres = genres.flatMap(genre => genre.name).join(\", \");\n  const moviePercent = `${(Number(vote_average) * 10).toFixed(0)}%`\n  \n  return (\n<>\n    <Wrapper>\n      <Mov>\n        <img src={movieImage} alt={title} width={200}/>\n        <ul>\n          <Li><h2>{title} {movieYear ? movieYear : \"\"}</h2></Li>\n          <Li><h4>overview - {overview}</h4></Li>\n          <Li><p>genres - {movieGenres}</p></Li>\n          <Li><p>{moviePercent ? `User Score ${moviePercent}` : \"0\"}</p></Li>\n          <Li></Li>\n        </ul>\n      </Mov>\n    </Wrapper>\n\n        <p>Additional information</p>\n            <Ul>\n              <Li><Link to=\"cast\">cast</Link></Li>\n              <Li><Link to=\"reviews\">reviews</Link></Li>\n            </Ul>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n        </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movie: propTypes.shape({\n      title: propTypes.string.isRequired,\n      overview: propTypes.string.isRequired,\n      vote_average: propTypes.number.isRequired,\n      release_date: propTypes.string.isRequired,\n      poster_path: propTypes.string.isRequired,\n    }).isRequired,\n}","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;","import { HiArrowLeft } from \"react-icons/hi\";\nimport {StyledLink} from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;","import { useState, useEffect } from 'react';\nimport { useParams, useLocation } from \"react-router-dom\";\nimport Loader from '../components/Loader';\nimport  MovieInfo from '../components/MovieInfo';\nimport api from '../api/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport BackLink from \"../components/BackLink\";\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/home\";\n\n  useEffect(() => {\n    async function fetchMovieDetails(){\n      setStatus('pending');\n      try{\n        const movie = await api.getMovieDetails(movieId);\n        setMovie(movie);\n      }catch(error){\n        setStatus('rejected');\n        toast.error(error.message);\n      }finally{\n        setStatus('resolved');\n      }\n    }\n    fetchMovieDetails();\n  }, [movieId])\n\n  return (\n    <>\n      {status === 'rejected' && <ToastContainer autoClose={1000} />}\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && (<>\n      <BackLink to={backLinkHref}>Back to movies</BackLink>\n      <MovieInfo movie={movie} />\n\n      </>)}\n    </>\n  );\n}\nexport default MovieDetails;"],"names":["axios","API_KEY","getTrendingMovies","url","response","data","results","Promise","reject","Error","getMoviesSearch","movie","length","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","api","LoaderContainer","styled","color","height","width","Wrapper","Mov","Ul","Li","title","overview","genres","vote_average","release_date","poster_path","movieYear","split","movieImage","movieGenres","flatMap","genre","name","join","moviePercent","Number","toFixed","src","alt","to","Suspense","fallback","Loader","StyledLink","Link","children","size","movieId","useParams","useState","setMovie","status","setStatus","backLinkHref","useLocation","state","from","useEffect","toast","message","fetchMovieDetails","autoClose","MovieInfo"],"sourceRoot":""}