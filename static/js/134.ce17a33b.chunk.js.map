{"version":3,"file":"static/js/134.ce17a33b.chunk.js","mappings":"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","sources":["api/api.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1315643545b87f640bd81c2c08cb68dd';\n\nasync function getTrendingMovies() {\n    try {\n      const url = `trending/movie/day?api_key=${API_KEY}`;\n      const response = await axios.get(url);\n      if (response) {return response.data.results;}\n        return Promise.reject(new Error(`There are no results for trending movies`));\n    } catch (error) {\n      return error;\n    }\n}\n\nasync function getMoviesSearch(movie) {\n  try {\n    const url = `search/movie?api_key=${API_KEY}&language=en-US&query=${movie}&page=1&include_adult=false`;\n    const response = await axios.get(url);\n    if (response.data.results.length > 0) {return response.data.results;}\n      return Promise.reject(new Error(`There are no results for movie you are searching for`));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getMovieDetails(movie_id) {\n  try {\n    const url = `movie/${movie_id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    if (response) {return response.data;}\n      return Promise.reject(new Error(`There are no results for trending movies`));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getMovieCredits(movie_id) {\n  try {\n    const url = `movie/${movie_id}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    if(response) {return response.data;}\n      return Promise.reject(new Error(`Error occured while fetching casting actors`));\n  } catch (error) {\n    return error;\n  }\n}\n\nasync function getMovieReviews(movie_id) {\n  try {\n    const url = `movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await axios.get(url);\n    if (response) {return response.data.results;}\n      return Promise.reject(new Error(`Error occured while fetching reviews`));\n  } catch (error) {\n    return error;\n  }\n}\n\nconst api = {\n  getTrendingMovies,\n  getMoviesSearch,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default api;","import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  ${'' /* align-items: center;\n  width: 100vw;\n  height: 100vh; */}\n`;","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n        <ThreeDots color=\"#3f51b5\" height={80} width={80} />\n    </LoaderContainer>\n  )\n};\n  \nexport default Loader;","import styled from 'styled-components';\n\nexport const Li = styled.li`\n  list-style: none;\n`;","import { Link, useLocation } from \"react-router-dom\";\nimport propTypes from 'prop-types';\nimport { Li } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n    {movies.map((movie) => (\n        <Li key={`${movie.id}`} >\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</Link>\n        </Li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      title: propTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n}","import {useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport  MoviesList from '../components/MoviesList';\nimport Loader from '../components/Loader';\nimport api from '../api/api';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MovieQuerySchema = Yup.object().shape({\n  query: Yup.string()\n    .min(3, 'Too Short!')\n    .max(50, 'Too Long!'),\n});\n\nconst Movies = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  \n\n  useEffect(() => {\n    async function fetchMovieSearch(){\n      setStatus('pending');\n      try{\n        const moviesList = await api.getMoviesSearch(searchQuery);\n        setMoviesList(moviesList);\n      }catch(error){\n        setStatus('rejected');\n        toast.error(error);\n      }finally{\n        setStatus('resolved');\n      }\n    }\n    fetchMovieSearch();\n  }, [searchQuery])\n\n  \n  const handleSubmit = ({ query }) =>{\n    setSearchParams(query && {query: query.toLowerCase().trim()})\n  };\n\n  return (\n    <div>\n      {status === 'rejected' && <ToastContainer autoClose={1000} />}\n      <Formik initialValues={{ query: '' }} onSubmit={handleSubmit} validationSchema={MovieQuerySchema}>\n      {({ errors, touched }) => (\n        <Form>\n          <Field name=\"query\" type=\"text\" autoComplete=\"off\" placeholder=\"Enter movie you'd like to find\" autoFocus></Field>\n          <ErrorMessage component=\"div\" name=\"query\" />\n          <button type=\"submit\">\n            Submit\n        </button>\n        </Form>\n        )}\n      </Formik>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && <MoviesList movies={moviesList}/>}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["axios","API_KEY","getTrendingMovies","url","response","data","results","Promise","reject","Error","getMoviesSearch","movie","length","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","api","LoaderContainer","styled","color","height","width","Li","movies","location","useLocation","map","to","id","state","from","title","MovieQuerySchema","Yup","shape","query","min","max","useState","moviesList","setMoviesList","status","setStatus","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","toast","fetchMovieSearch","autoClose","initialValues","onSubmit","toLowerCase","trim","validationSchema","errors","touched","name","type","autoComplete","placeholder","autoFocus","component"],"sourceRoot":""}